{"version":3,"file":"msal.interceptor.d.ts","sources":["msal.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from \"@angular/common/http\";\r\nimport { Location } from \"@angular/common\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { MsalInterceptorConfiguration } from \"./msal.interceptor.config\";\r\nexport declare class MsalInterceptor implements HttpInterceptor {\r\n    private msalInterceptorConfig;\r\n    private authService;\r\n    private location;\r\n    constructor(msalInterceptorConfig: MsalInterceptorConfiguration, authService: MsalService, location: Location);\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\r\n    /**\r\n     * Invoke interaction for the given set of scopes\r\n     * @param scopes Array of scopes for the request\r\n     * @returns Result from the interactive request\r\n     */\r\n    private acquireTokenInteractively;\r\n    /**\r\n     * Looks up the scopes for the given endpoint from the protectedResourceMap\r\n     * @param endpoint Url of the request\r\n     * @returns Array of scopes, or null if not found\r\n     *\r\n     */\r\n    private getScopesForEndpoint;\r\n}\r\n"]}