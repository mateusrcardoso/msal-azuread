{"version":3,"sources":["../../src/constants.ts","../../src/packageMetadata.ts","../../src/msal.service.ts","../../src/msal.broadcast.service.ts","../../src/msal.guard.ts","../../src/msal.interceptor.ts","../../src/msal.redirect.component.ts","../../src/msal.module.ts","../../node_modules/tslib/tslib.es6.js","../../src/msal.navigation.client.ts"],"names":["MSAL_INSTANCE","InjectionToken","MSAL_GUARD_CONFIG","MSAL_INTERCEPTOR_CONFIG","name","version","MsalService","instance","location","this","hash","path","split","pop","redirectHash","initializeWrapperLibrary","WrapperSKU","Angular","prototype","acquireTokenPopup","request","from","acquireTokenRedirect","acquireTokenSilent","silentRequest","handleRedirectObservable","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getLogger","logger","clone","setLogger","Injectable","Inject","args","Location","msalInstance","authService","_this","_msalSubject","Subject","msalSubject$","asObservable","_inProgress","BehaviorSubject","InteractionStatus","Startup","inProgress$","addEventCallback","message","next","status","EventMessageUtils","getInteractionStatusFromEvent","verbose","eventType","MsalGuard","msalGuardConfig","msalBroadcastService","router","subscribe","parseUrl","url","getDestinationUrl","baseElements","document","getElementsByTagName","baseUrl","normalize","length","href","window","origin","pathUrl","prepareExternalUrl","startsWith","loginInteractively","state","authRequest","interactionType","InteractionType","Popup","pipe","map","response","setActiveAccount","account","redirectStartPage","Object","assign","activateHelper","Redirect","BrowserConfigurationAuthError","UrlString","hashContainsKnownProperties","BrowserUtils","isInIframe","warning","of","loginFailedRoute","concatMap","getAllAccounts","catchError","parseInt","VERSION","major","canActivate","route","canActivateChild","canLoad","MsalBroadcastService","Router","MsalInterceptor","msalInterceptorConfig","intercept","req","scopes","getScopesForEndpoint","handle","getActiveAccount","info","infoPii","error","acquireTokenInteractively","switchMap","result","accessToken","headers","set","requestClone","EMPTY","endpoint","normalizedEndpoint","keyMatchesEndpointArray","Array","protectedResourceMap","keys","filter","key","normalizedKey","keyComponents","getUrlComponents","relativeNormalizedKey","QueryString","AbsolutePath","StringUtils","matchPattern","keyForEndpoint","get","MsalRedirectComponent","ngOnInit","Component","selector","template","MsalModule","forRoot","guardConfig","interceptorConfig","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","e","rejected","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","push","create","MsalCustomNavigationClient","_super","__","constructor","__extends","navigateInternal","options","urlComponents","newUrl","verbosePii","navigateByUrl","replaceUrl","noHistory","NavigationClient"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { InjectionToken } from \"@angular/core\";\r\n\r\nexport const MSAL_INSTANCE = new InjectionToken<string>(\"MSAL_INSTANCE\");\r\n\r\nexport const MSAL_GUARD_CONFIG = new InjectionToken<string>(\"MSAL_GUARD_CONFIG\");\r\n\r\nexport const MSAL_INTERCEPTOR_CONFIG = new InjectionToken<string>(\"MSAL_INTERCEPTOR_CONFIG\");\r\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-angular\";\nexport const version = \"2.0.0-beta.4\";\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport {\r\n    IPublicClientApplication,\r\n    EndSessionRequest,\r\n    EndSessionPopupRequest,\r\n    AuthenticationResult,\r\n    RedirectRequest,\r\n    SilentRequest,\r\n    PopupRequest,\r\n    SsoSilentRequest,\r\n    Logger,\r\n    WrapperSKU\r\n} from \"@azure/msal-browser\";\r\nimport { MSAL_INSTANCE } from \"./constants\";\r\nimport { Observable, from } from \"rxjs\";\r\nimport { IMsalService } from \"./IMsalService\";\r\nimport { name, version } from \"./packageMetadata\";\r\n\r\n@Injectable()\r\nexport class MsalService implements IMsalService {\r\n    private redirectHash: string;\r\n    private logger: Logger;\r\n\r\n    constructor(\r\n        @Inject(MSAL_INSTANCE) public instance: IPublicClientApplication,\r\n        private location: Location\r\n    ) {\r\n        const hash = this.location.path(true).split(\"#\").pop();\r\n        if (hash) {\r\n            this.redirectHash = `#${hash}`;\r\n        }\r\n        this.instance.initializeWrapperLibrary(WrapperSKU.Angular, version);\r\n    }\r\n\r\n    acquireTokenPopup(request: PopupRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.acquireTokenPopup(request));\r\n    }\r\n    acquireTokenRedirect(request: RedirectRequest): Observable<void> {\r\n        return from(this.instance.acquireTokenRedirect(request));\r\n    }\r\n    acquireTokenSilent(silentRequest: SilentRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.acquireTokenSilent(silentRequest));\r\n    }\r\n    handleRedirectObservable(hash?: string): Observable<AuthenticationResult> {\r\n        return from(this.instance.handleRedirectPromise(hash || this.redirectHash));\r\n    }\r\n    loginPopup(request?: PopupRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.loginPopup(request));\r\n    }\r\n    loginRedirect(request?: RedirectRequest): Observable<void> {\r\n        return from(this.instance.loginRedirect(request));\r\n    }\r\n    logout(logoutRequest?: EndSessionRequest): Observable<void> {\r\n        return from(this.instance.logout(logoutRequest));\r\n    }\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Observable<void> {\r\n        return from(this.instance.logoutRedirect(logoutRequest));\r\n    }\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Observable<void> {\r\n        return from(this.instance.logoutPopup(logoutRequest));\r\n    }\r\n    ssoSilent(request: SsoSilentRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.ssoSilent(request));\r\n    }\r\n    /**\r\n     * Gets logger for msal-angular.\r\n     * If no logger set, returns logger instance created with same options as msal-browser\r\n     */\r\n    getLogger(): Logger {\r\n        if (!this.logger) {\r\n            this.logger = this.instance.getLogger().clone(name, version);\r\n        }\r\n        return this.logger;\r\n    }\r\n    // Create a logger instance for msal-angular with the same options as msal-browser\r\n    setLogger(logger: Logger): void {\r\n        this.logger = logger.clone(name, version);\r\n        this.instance.setLogger(logger);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\r\nimport { MSAL_INSTANCE } from \"./constants\";\r\nimport { EventMessage, EventMessageUtils, IPublicClientApplication, InteractionStatus } from \"@azure/msal-browser\";\r\nimport { MsalService } from \"./msal.service\";\r\n\r\n@Injectable()\r\nexport class MsalBroadcastService {\r\n    private _msalSubject: Subject<EventMessage>;\r\n    public msalSubject$: Observable<EventMessage>;\r\n    private _inProgress: BehaviorSubject<InteractionStatus>;\r\n    public inProgress$: Observable<InteractionStatus>;\r\n\r\n    constructor(\r\n        @Inject(MSAL_INSTANCE) private msalInstance: IPublicClientApplication,\r\n        private authService: MsalService\r\n    ) {\r\n        this._msalSubject = new Subject<EventMessage>();\r\n        this.msalSubject$  = this._msalSubject.asObservable();\r\n\r\n        // InProgress as BehaviorSubject so most recent inProgress state will be available upon subscription\r\n        this._inProgress = new BehaviorSubject<InteractionStatus>(InteractionStatus.Startup);\r\n        this.inProgress$ = this._inProgress.asObservable();\r\n\r\n        this.msalInstance.addEventCallback((message: EventMessage) => {\r\n            this._msalSubject.next(message);\r\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message);\r\n            if (status !== null) {\r\n                this.authService.getLogger().verbose(`BroadcastService - ${message.eventType} results in setting inProgress to ${status}`);\r\n                this._inProgress.next(status);\r\n            }\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, CanLoad, UrlTree, Router } from \"@angular/router\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { Injectable, Inject, VERSION } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport { InteractionType, BrowserConfigurationAuthError, BrowserUtils, UrlString, PopupRequest, RedirectRequest, AuthenticationResult } from \"@azure/msal-browser\";\r\nimport { MsalGuardConfiguration } from \"./msal.guard.config\";\r\nimport { MSAL_GUARD_CONFIG } from \"./constants\";\r\nimport { concatMap, catchError, map } from \"rxjs/operators\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\r\n\r\n@Injectable()\r\nexport class MsalGuard implements CanActivate, CanActivateChild, CanLoad {\r\n    private loginFailedRoute?: UrlTree;\r\n\r\n    constructor(\r\n        @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n        private msalBroadcastService: MsalBroadcastService,\r\n        private authService: MsalService,\r\n        private location: Location,\r\n        private router: Router\r\n    ) { \r\n        // Subscribing so events in MsalGuard will set inProgress$ observable\r\n        this.msalBroadcastService.inProgress$.subscribe();\r\n    }\r\n\r\n    /**\r\n     * Parses url string to UrlTree\r\n     * @param url \r\n     */\r\n    parseUrl(url: string): UrlTree {\r\n        return this.router.parseUrl(url);\r\n    }\r\n\r\n    /**\r\n     * Builds the absolute url for the destination page\r\n     * @param path Relative path of requested page\r\n     * @returns Full destination url\r\n     */\r\n    getDestinationUrl(path: string): string {\r\n        this.authService.getLogger().verbose(\"Guard - getting destination url\");\r\n        // Absolute base url for the application (default to origin if base element not present)\r\n        const baseElements = document.getElementsByTagName(\"base\");\r\n        const baseUrl = this.location.normalize(baseElements.length ? baseElements[0].href : window.location.origin);\r\n\r\n        // Path of page (including hash, if using hash routing)\r\n        const pathUrl = this.location.prepareExternalUrl(path);\r\n\r\n        // Hash location strategy\r\n        if (pathUrl.startsWith(\"#\")) {\r\n            this.authService.getLogger().verbose(\"Guard - destination by hash routing\");\r\n            return `${baseUrl}/${pathUrl}`;\r\n        }\r\n\r\n        /*\r\n         * If using path location strategy, pathUrl will include the relative portion of the base path (e.g. /base/page).\r\n         * Since baseUrl also includes /base, can just concatentate baseUrl + path\r\n         */\r\n        return `${baseUrl}${path}`;\r\n    }\r\n\r\n    /**\r\n     * Interactively prompt the user to login\r\n     * @param url Path of the requested page\r\n     */\r\n    private loginInteractively(state: RouterStateSnapshot): Observable<boolean> {\r\n        const authRequest = typeof this.msalGuardConfig.authRequest === \"function\"\r\n            ? this.msalGuardConfig.authRequest(this.authService, state)\r\n            : { ...this.msalGuardConfig.authRequest };\r\n        if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n            this.authService.getLogger().verbose(\"Guard - logging in by popup\");\r\n            return this.authService.loginPopup(authRequest as PopupRequest)\r\n                .pipe(\r\n                    map((response: AuthenticationResult) => {\r\n                        this.authService.getLogger().verbose(\"Guard - login by popup successful, can activate, setting active account\");\r\n                        this.authService.instance.setActiveAccount(response.account);\r\n                        return true;\r\n                    })\r\n                );\r\n        }\r\n\r\n        this.authService.getLogger().verbose(\"Guard - logging in by redirect\");\r\n        const redirectStartPage = this.getDestinationUrl(state.url);\r\n        return this.authService.loginRedirect({\r\n            redirectStartPage,\r\n            ...authRequest\r\n        } as RedirectRequest)\r\n            .pipe(\r\n                map(() => false)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Helper which checks for the correct interaction type, prevents page with Guard to be set as reidrect, and calls handleRedirectObservable\r\n     * @param state \r\n     */\r\n    private activateHelper(state?: RouterStateSnapshot): Observable<boolean|UrlTree> {\r\n        if (this.msalGuardConfig.interactionType !== InteractionType.Popup && this.msalGuardConfig.interactionType !== InteractionType.Redirect) {\r\n            throw new BrowserConfigurationAuthError(\"invalid_interaction_type\", \"Invalid interaction type provided to MSAL Guard. InteractionType.Popup or InteractionType.Redirect must be provided in the MsalGuardConfiguration\");\r\n        }\r\n        this.authService.getLogger().verbose(\"MSAL Guard activated\");\r\n\r\n        /*\r\n         * If a page with MSAL Guard is set as the redirect for acquireTokenSilent,\r\n         * short-circuit to prevent redirecting or popups.\r\n         * TODO: Update to allow running in iframe once allowRedirectInIframe is implemented\r\n         */\r\n        if (UrlString.hashContainsKnownProperties(window.location.hash) && BrowserUtils.isInIframe()) {\r\n            this.authService.getLogger().warning(\"Guard - redirectUri set to page with MSAL Guard. It is recommended to not set redirectUri to a page that requires authentication.\");\r\n            return of(false);\r\n        }\r\n\r\n        /**\r\n         * If a loginFailedRoute is set in the config, set this as the loginFailedRoute\r\n         */\r\n        if (this.msalGuardConfig.loginFailedRoute) {\r\n            this.loginFailedRoute = this.parseUrl(this.msalGuardConfig.loginFailedRoute);\r\n        }\r\n\r\n        return this.authService.handleRedirectObservable()\r\n            .pipe(\r\n                concatMap(() => {\r\n                    if (!this.authService.instance.getAllAccounts().length) {\r\n                        if (state) {\r\n                            this.authService.getLogger().verbose(\"Guard - no accounts retrieved, log in required to activate\");\r\n                            return this.loginInteractively(state);\r\n                        } \r\n                        this.authService.getLogger().verbose(\"Guard - no accounts retrieved, no state, cannot load\");\r\n                        return of(false);\r\n                    }\r\n\r\n                    this.authService.getLogger().verbose(\"Guard - at least 1 account exists, can activate or load\");\r\n                    return of(true);\r\n\r\n                }),\r\n                catchError(() => {\r\n                    this.authService.getLogger().verbose(\"Guard - error while logging in, unable to activate\");\r\n                    /**\r\n                     * If a loginFailedRoute is set, checks to see if Angular 10+ is used and state is passed in before returning route\r\n                     * Apps using Angular 9 will receive of(false) in canLoad interface, as it does not support UrlTree return types\r\n                     */\r\n                    if (this.loginFailedRoute && parseInt(VERSION.major, 10) > 9 && state) {\r\n                        this.authService.getLogger().verbose(\"Guard - loginFailedRoute set, redirecting\");\r\n                        return of(this.loginFailedRoute);\r\n                    }\r\n                    return of(false);\r\n                })\r\n            );\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean|UrlTree> {\r\n        this.authService.getLogger().verbose(\"Guard - canActivate\");\r\n        return this.activateHelper(state);\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean|UrlTree> {\r\n        this.authService.getLogger().verbose(\"Guard - canActivateChild\");\r\n        return this.activateHelper(state);\r\n    }\r\n\r\n    canLoad(): Observable<boolean> {\r\n        this.authService.getLogger().verbose(\"Guard - canLoad\");\r\n        // @ts-ignore\r\n        return this.activateHelper();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from \"@angular/common/http\";\r\nimport { Location } from \"@angular/common\";\r\nimport { Observable, EMPTY, of } from \"rxjs\";\r\nimport { switchMap, catchError } from \"rxjs/operators\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { AccountInfo, AuthenticationResult, BrowserConfigurationAuthError, InteractionType, StringUtils, UrlString } from \"@azure/msal-browser\";\r\nimport { Injectable, Inject } from \"@angular/core\";\r\nimport { MSAL_INTERCEPTOR_CONFIG } from \"./constants\";\r\nimport { MsalInterceptorAuthRequest, MsalInterceptorConfiguration } from \"./msal.interceptor.config\";\r\n\r\n@Injectable()\r\nexport class MsalInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        @Inject(MSAL_INTERCEPTOR_CONFIG) private msalInterceptorConfig: MsalInterceptorConfiguration,\r\n        private authService: MsalService,\r\n        private location: Location\r\n    ) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.msalInterceptorConfig.interactionType !== InteractionType.Popup && this.msalInterceptorConfig.interactionType !== InteractionType.Redirect) {\r\n            throw new BrowserConfigurationAuthError(\"invalid_interaction_type\", \"Invalid interaction type provided to MSAL Interceptor. InteractionType.Popup, InteractionType.Redirect must be provided in the msalInterceptorConfiguration\");\r\n        }\r\n\r\n        this.authService.getLogger().verbose(\"MSAL Interceptor activated\");\r\n        const scopes = this.getScopesForEndpoint(req.url);\r\n\r\n        // If no scopes for endpoint, does not acquire token\r\n        if (!scopes || scopes.length === 0) {\r\n            this.authService.getLogger().verbose(\"Interceptor - no scopes for endpoint\");\r\n            return next.handle(req);\r\n        }\r\n\r\n        // Sets account as active account or first account\r\n        let account: AccountInfo;\r\n        if (!!this.authService.instance.getActiveAccount()) {\r\n            this.authService.getLogger().verbose(\"Interceptor - active account selected\");\r\n            account = this.authService.instance.getActiveAccount();\r\n        } else {\r\n            this.authService.getLogger().verbose(\"Interceptor - no active account, fallback to first account\");\r\n            account = this.authService.instance.getAllAccounts()[0];\r\n        }\r\n\r\n        const authRequest = typeof this.msalInterceptorConfig.authRequest === \"function\"\r\n            ? this.msalInterceptorConfig.authRequest(this.authService, req, { account: account })\r\n            : { ...this.msalInterceptorConfig.authRequest, account };\r\n\r\n        this.authService.getLogger().info(`Interceptor - ${scopes.length} scopes found for endpoint`);\r\n        this.authService.getLogger().infoPii(`Interceptor - [${scopes}] scopes found for ${req.url}`);\r\n\r\n        // Note: For MSA accounts, include openid scope when calling acquireTokenSilent to return idToken\r\n        return this.authService.acquireTokenSilent({...authRequest, scopes, account })\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.authService.getLogger().error(\"Interceptor - acquireTokenSilent rejected with error. Invoking interaction to resolve.\");\r\n                    return this.acquireTokenInteractively(authRequest, scopes);\r\n                }),\r\n                switchMap((result: AuthenticationResult)  => {\r\n                    if (!result.accessToken) {\r\n                        this.authService.getLogger().error(\"Interceptor - acquireTokenSilent resolved with null access token. Known issue with B2C tenants, invoking interaction to resolve.\");\r\n                        return this.acquireTokenInteractively(authRequest, scopes);\r\n                    }\r\n                    return of(result);\r\n                }),\r\n                switchMap((result: AuthenticationResult) => {\r\n                    this.authService.getLogger().verbose(\"Interceptor - setting authorization headers\");\r\n                    const headers = req.headers\r\n                        .set(\"Authorization\", `Bearer ${result.accessToken}`);\r\n\r\n                    const requestClone = req.clone({headers});\r\n                    return next.handle(requestClone);\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Invoke interaction for the given set of scopes\r\n     * @param scopes Array of scopes for the request\r\n     * @returns Result from the interactive request\r\n     */\r\n    private acquireTokenInteractively(authRequest: MsalInterceptorAuthRequest, scopes: string[]): Observable<AuthenticationResult> {\r\n        if (this.msalInterceptorConfig.interactionType === InteractionType.Popup) {\r\n            this.authService.getLogger().verbose(\"Interceptor - error acquiring token silently, acquiring by popup\");\r\n            return this.authService.acquireTokenPopup({ ...authRequest, scopes });\r\n        }\r\n        this.authService.getLogger().verbose(\"Interceptor - error acquiring token silently, acquiring by redirect\");\r\n        const redirectStartPage = window.location.href;\r\n        this.authService.acquireTokenRedirect({...authRequest, scopes, redirectStartPage });\r\n        return EMPTY;\r\n    }\r\n\r\n    /**\r\n     * Looks up the scopes for the given endpoint from the protectedResourceMap\r\n     * @param endpoint Url of the request\r\n     * @returns Array of scopes, or null if not found\r\n     *\r\n     */\r\n    private getScopesForEndpoint(endpoint: string): Array<string>|null {\r\n        this.authService.getLogger().verbose(\"Interceptor - getting scopes for endpoint\");\r\n\r\n        // Ensures endpoints and protected resources compared are normalized\r\n        const normalizedEndpoint = this.location.normalize(endpoint);\r\n\r\n        const protectedResourcesArray = Array.from(this.msalInterceptorConfig.protectedResourceMap.keys());\r\n\r\n        const keyMatchesEndpointArray = protectedResourcesArray.filter(key => {\r\n            const normalizedKey = this.location.normalize(key);\r\n            \r\n            // Normalized key should include query strings if applicable\r\n            const keyComponents = new UrlString(key).getUrlComponents();\r\n            const relativeNormalizedKey = keyComponents.QueryString ? `${keyComponents.AbsolutePath}?${keyComponents.QueryString}` : this.location.normalize(keyComponents.AbsolutePath);\r\n\r\n            // Relative endpoint not applicable, matching endpoint with protected resource. StringUtils.matchPattern accounts for wildcards\r\n            if (relativeNormalizedKey === \"\" || relativeNormalizedKey === \"/*\") {\r\n                return StringUtils.matchPattern(normalizedKey, normalizedEndpoint);\r\n            } else {\r\n                // Matching endpoint with both protected resource and relative url of protected resource\r\n                return StringUtils.matchPattern(normalizedKey, normalizedEndpoint) || StringUtils.matchPattern(relativeNormalizedKey, normalizedEndpoint);\r\n            }\r\n        });\r\n\r\n        // Process all protected resources and send the first matched resource\r\n        if (keyMatchesEndpointArray.length > 0) {\r\n            const keyForEndpoint = keyMatchesEndpointArray[0];\r\n            if (keyForEndpoint) {\r\n                return this.msalInterceptorConfig.protectedResourceMap.get(keyForEndpoint);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * This is a dedicated redirect component to be added to Angular apps to \r\n * handle redirects when using @azure/msal-angular.\r\n * Import this component to use redirects in your app.\r\n */\r\n\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MsalService } from \"./msal.service\";\r\n\r\n@Component({\r\n    selector: \"app-redirect\",\r\n    template: \"\"\r\n})\r\nexport class MsalRedirectComponent implements OnInit {\r\n\r\n    constructor(private authService: MsalService) { }\r\n\r\n    ngOnInit(): void {    \r\n        this.authService.getLogger().verbose(\"MsalRedirectComponent activated\");\r\n        this.authService.handleRedirectObservable().subscribe();\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\r\nimport { MsalGuardConfiguration } from \"./msal.guard.config\";\r\nimport { MsalInterceptorConfiguration } from \"./msal.interceptor.config\";\r\nimport { MsalGuard } from \"./msal.guard\";\r\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { MSAL_INSTANCE , MSAL_GUARD_CONFIG, MSAL_INTERCEPTOR_CONFIG } from \"./constants\";\r\nimport { MsalRedirectComponent } from \"./msal.redirect.component\";\r\n\r\n@NgModule({\r\n    declarations: [MsalRedirectComponent],\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    providers: [\r\n        MsalGuard,\r\n        MsalBroadcastService\r\n    ]\r\n})\r\nexport class MsalModule {\r\n    static forRoot(\r\n        msalInstance: IPublicClientApplication,\r\n        guardConfig: MsalGuardConfiguration,\r\n        interceptorConfig: MsalInterceptorConfiguration\r\n    ): ModuleWithProviders<MsalModule> {\r\n        return {\r\n            ngModule: MsalModule,\r\n            providers: [\r\n                {\r\n                    provide: MSAL_INSTANCE,\r\n                    useValue: msalInstance\r\n                },\r\n                {\r\n                    provide: MSAL_GUARD_CONFIG,\r\n                    useValue: guardConfig\r\n                },\r\n                {\r\n                    provide: MSAL_INTERCEPTOR_CONFIG,\r\n                    useValue: interceptorConfig\r\n                },\r\n                MsalService\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { NavigationClient, NavigationOptions, UrlString } from \"@azure/msal-browser\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n/**\r\n * Custom navigation used for Angular client-side navigation.\r\n * See performance doc for details:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-angular/docs/v2-docs/performance.md\r\n */\r\n@Injectable()\r\nexport class MsalCustomNavigationClient extends NavigationClient {\r\n\r\n    constructor(\r\n        private authService: MsalService,\r\n        private router: Router, \r\n        private location: Location\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    async navigateInternal(url:string, options: NavigationOptions): Promise<boolean> {\r\n        this.authService.getLogger().verbose(\"MsalCustomNavigationClient called\");\r\n        const urlComponents = new UrlString(url).getUrlComponents();\r\n\r\n        // Normalizing newUrl if no query string\r\n        const newUrl = urlComponents.QueryString ? `${urlComponents.AbsolutePath}?${urlComponents.QueryString}` : this.location.normalize(urlComponents.AbsolutePath);\r\n\r\n        // Replaces current state if noHistory flag set to true\r\n        this.authService.getLogger().verbosePii(`MsalCustomNavigationClient - navigating to newUrl: ${newUrl}`);\r\n        this.router.navigateByUrl(newUrl, { replaceUrl: options.noHistory });\r\n\r\n        return Promise.resolve(false);\r\n    }\r\n}\r\n"]}